syntax = "proto3";

option go_package = "github.com/k-code-yt/go-api-practice/shared";

message DistanceProto {
	string ID = 1;
	double Value = 2;
	int32 Timestamp = 3;
};

message SaveInvoiceRequest {
	DistanceProto distance = 1;
};

message SaveInvoiceResponse {
	bool Success = 1;
	string Msg = 2;
};


service InvoiceTransportService {
	rpc SaveInvoice(SaveInvoiceRequest) returns (SaveInvoiceResponse);
};


message GetInvoiceRequest {
	string ID = 1;
};

message InvoiceProto {
	string ID = 1;       
	double Amount   =2;
	string Category = 3;
};


message GetInvoiceResponse {
	InvoiceProto invoice = 1;
};


service GetterInvoiceTransportService {
	rpc GetInvoice(GetInvoiceRequest) returns (GetInvoiceResponse);
};


// ---STREAMING---
message SensorDataProto {
	string ID = 1;
	double lat = 2;
	double lng = 3;
};

message SensorDataRequest {
	SensorDataProto data = 1;
};


message SensorDataResponse {
	SensorDataProto data = 1;
};

message FileChunk {
	string filename = 1;
	bytes content = 2;
	int64 chunk_index = 3;
	int64 total_size = 4;
};

message FileUploadResponse {
	bool success = 1;
	string message = 2;
	string save_path = 3;
	int64 bytes_received = 4;
};

service StreamingTransportSerivce {
	rpc SensorDataStream(stream SensorDataRequest) returns (stream SensorDataResponse);
	rpc UploadFile(stream FileChunk) returns(FileUploadResponse);
};